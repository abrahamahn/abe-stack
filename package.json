{
  "name": "abe-stack",
  "version": "1.0.0",
  "description": "A modern full-stack boilerplate with PERN stack",
  "main": "dist/server/index.js",
  "scripts": {
    "_development": "=== Development Commands ===",
    "dev": "node tools/dev/start-dev.js",
    "dev:client": "vite --config config/build/vite.config.ts",
    "dev:server": "cross-env NODE_ENV=development ts-node -r tsconfig-paths/register --transpile-only src/server/index.ts",
    "dev:clean": "npm run ports:kill && npm run dev",
    "_production": "=== Production Commands ===",
    "start": "concurrently --names \"SERVER,CLIENT\" --prefix-colors \"blue,green\" --prefix \"[{name}]\" \"npm run start:server\" \"npm run start:client\"",
    "start:client": "vite preview --config config/build/vite.config.ts",
    "start:server": "cross-env NODE_ENV=production ts-node -r tsconfig-paths/register src/server/index.ts",
    "preview": "vite preview --config config/build/vite.config.ts",
    "_build": "=== Build Commands ===",
    "build": "npm run build:check && npm run build:compile",
    "build:dev": "npm run type-check && npm run build:compile",
    "build:check": "npm run lint && npm run type-check",
    "build:compile": "npm run build:server && npm run build:client",
    "build:client": "vite build --config config/build/vite.config.ts",
    "build:server": "tsc --project config/build/tsconfig.json",
    "_test": "=== Testing Commands ===",
    "test": "npm run test:unit",
    "test:unit": "vitest run --config config/test/vitest.config.js",
    "test:integration": "vitest run --config config/test/vitest.integration.config.js",
    "test:e2e": "playwright test --config config/test/playwright.config.ts",
    "test:watch": "vitest --config config/test/vitest.config.js",
    "test:coverage": "vitest run --coverage --config config/test/vitest.config.js",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "_quality": "=== Code Quality Commands ===",
    "lint": "npm run lint:check",
    "lint:check": "eslint . --ext ts,tsx --config config/dev/eslint.config.js --report-unused-disable-directives --max-warnings 400",
    "lint:strict": "eslint . --ext ts,tsx --config config/dev/eslint.config.js --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --config config/dev/eslint.config.js --fix",
    "lint:count": "eslint . --ext ts,tsx --config config/dev/eslint.config.js --format json | node -e \"const fs = require('fs'); const data = fs.readFileSync(0, 'utf8'); try { const results = JSON.parse(data); const stats = results.reduce((acc, file) => ({ errors: acc.errors + file.errorCount, warnings: acc.warnings + file.warningCount }), { errors: 0, warnings: 0 }); console.log('ðŸ“Š Code Quality:', stats.errors, 'errors,', stats.warnings, 'warnings'); } catch (e) { console.log('ðŸ“Š ESLint completed successfully'); }\"",
    "type-check": "tsc --noEmit --incremental true --pretty --noEmitOnError --project config/build/tsconfig.json",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,scss}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,scss}\"",
    "_ci": "=== CI/CD Commands ===",
    "ci": "npm run ci:install && npm run ci:test",
    "ci:install": "npm ci",
    "ci:test": "npm run build:check && npm run test:all",
    "pre-commit": "npm run lint:strict && npm run type-check && npm run test:unit",
    "_utilities": "=== Utility Commands ===",
    "clean": "npm run clean:deps && npm run clean:build",
    "clean:deps": "rm -rf node_modules package-lock.json",
    "clean:build": "rm -rf dist",
    "ports:check": "node -e \"const net = require('net'); const ports = [8080, 5173, 5432]; ports.forEach(port => { const server = net.createServer(); server.listen(port, () => { console.log(`Port ${port} is free`); server.close(); }).on('error', () => console.log(`Port ${port} is in use`)); });\"",
    "ports:kill": "node -e \"const { execSync } = require('child_process'); try { execSync('taskkill /f /im node.exe', { stdio: 'ignore' }); console.log('Killed existing Node.js processes'); } catch (e) { console.log('No Node.js processes to kill'); }\"",
    "setup": "node tools/setup/setup.ts",
    "prepare": "husky config/dev/.husky"
  },
  "dependencies": {
    "@types/fluent-ffmpeg": "^2.1.27",
    "axios": "^1.7.9",
    "bcrypt": "^5.1.1",
    "data-type-ts": "^1.0.3",
    "date-fns": "^4.1.0",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fluent-ffmpeg": "^2.1.3",
    "helmet": "^8.1.0",
    "hls.js": "^1.6.12",
    "inquirer": "^12.9.6",
    "inversify": "^6.1.4",
    "ioredis": "^5.7.0",
    "joi": "^17.13.3",
    "jsonwebtoken": "^9.0.2",
    "md5": "^2.3.0",
    "mime-types": "^2.1.35",
    "node-cache": "^5.1.2",
    "nodemailer": "^6.9.19",
    "pg": "^8.13.1",
    "plyr": "^3.8.3",
    "rate-limiter-flexible": "^5.0.3",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.28.0",
    "redis": "^4.7.0",
    "reflect-metadata": "^0.2.2",
    "sharp": "^0.33.5",
    "socket.io": "^4.8.1",
    "uuid": "^11.0.4",
    "ws": "^8.18.3"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@types/bcrypt": "^5.0.2",
    "@types/cookie": "^0.6.0",
    "@types/express": "^4.17.21",
    "@types/figlet": "^1.7.0",
    "@types/inquirer": "^9.0.9",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/lodash": "^4.17.20",
    "@types/md5": "^2.3.5",
    "@types/mime-types": "^2.1.4",
    "@types/node": "^22.10.7",
    "@types/nodemailer": "^6.4.19",
    "@types/pg": "^8.15.5",
    "@types/react": "^18.3.17",
    "@types/react-dom": "^18.3.5",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "@vitejs/plugin-react": "^4.3.3",
    "@vitest/coverage-v8": "^3.2.4",
    "boxen": "^8.0.1",
    "chalk": "^5.6.2",
    "cli-spinners": "^3.2.0",
    "concurrently": "^9.2.1",
    "cross-env": "^7.0.3",
    "eslint": "^9.16.0",
    "eslint-formatter-pretty": "^6.0.1",
    "eslint-import-resolver-alias": "^1.1.2",
    "eslint-import-resolver-typescript": "^3.7.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.0.0",
    "figlet": "^1.9.2",
    "gradient-string": "^3.0.0",
    "husky": "^9.1.7",
    "lint-staged": "^15.3.0",
    "lodash": "^4.17.21",
    "node-pg-migrate": "^7.8.2",
    "nodemon": "^3.1.10",
    "ora": "^8.1.2",
    "prettier": "^3.3.3",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.5",
    "typescript": "^5.6.3",
    "vite": "^6.4.1",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.2.4"
  }
}
